/*
 * Fireplace
November 09, 2017

Copyright (C) 2017 Jan Sch√ºmann
All rights reserved.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
*/

#include "Arduboy2.h"
#include <avr/pgmspace.h>


#define FIRE_X 50
#define FIRE_Y 50

Arduboy2 arduboy;


const uint8_t PROGMEM fireplace[] = {
0x7f,0x3f,0xa0,0xc3,0x6c,0x3a,0x9d,0x4d,0xa7,0xd3,0xe9,0x74,0x7a,0xbe,0x74,0x76,
0x9b,0x8d,0x3e,0xbd,0xdd,0x6e,0xb7,0x8a,0x2b,0x1d,0xad,0x92,0xca,0xae,0xb7,0xb1,
0xc5,0x96,0x4e,0xa7,0x95,0xac,0xf4,0x36,0xbd,0x54,0x32,0xb6,0x78,0xd3,0xe9,0xed,
0x7a,0xbb,0x5d,0xa7,0xd3,0xe9,0x74,0x3a,0x9d,0x4e,0x07,0x2d,0xa6,0xc3,0x52,0x3a,
0xab,0x5c,0xad,0x7a,0xdd,0xb1,0xa5,0xd3,0xe9,0x74,0x3a,0x9d,0x4e,0x6f,0x95,0x73,
0x97,0x2c,0x27,0xed,0xf8,0x54,0x5e,0x69,0x85,0xa7,0x74,0xba,0x73,0x36,0x22,0x74,
0x2d,0x55,0xac,0xb8,0xeb,0x92,0x15,0x67,0xa3,0xb0,0xea,0x4b,0xc6,0x95,0x73,0xdb,
0xe8,0xd3,0xe9,0xac,0xea,0x5c,0xe7,0xa6,0x5a,0xba,0x6d,0x3a,0xbd,0x5d,0x6f,0xb7,
0x4e,0x3a,0xe7,0xec,0xa8,0xcf,0xd6,0x2f,0xd3,0xe9,0xd0,0xb6,0x55,0x52,0x39,0xe7,
0x4e,0xfd,0x56,0x49,0xe7,0x9c,0x93,0x4a,0x2a,0xe7,0xdc,0xe5,0x2e,0xa5,0x4a,0xa9,
0xaa,0xde,0x57,0xf7,0xb2,0x72,0xa5,0x2e,0xd7,0xab,0xcb,0xa9,0x52,0x9f,0xba,0x5c,
0x25,0x2b,0xa7,0x9c,0xba,0xd5,0xfd,0xb9,0xce,0xd5,0xce,0x39,0xe7,0x2a,0x77,0x39,
0xe7,0x54,0xa9,0xcb,0xdd,0x52,0xa9,0xcb,0x55,0x52,0xc9,0xcb,0x5d,0xae,0x76,0xce,
0x55,0x52,0xc9,0xda,0xd5,0x4e,0x49,0x25,0x2f,0xd7,0xb9,0xda,0x39,0x77,0xb9,0x4a,
0x56,0x72,0x7b,0x39,0xe7,0x94,0xdd,0x2a,0xe7,0x9c,0x2a,0xe5,0x9c,0xb3,0x4a,0x2a,
0xbb,0xdd,0x56,0x52,0xd9,0xca,0x5d,0x4a,0x55,0xa5,0x52,0xf1,0x29,0x65,0xb7,0xdb,
0x74,0x3a,0x1d,0xe9,0xa5,0x54,0xed,0x6a,0xd7,0xbb,0x7c,0x2a,0x25,0x15,0x04,0xe4,
0x54,0x5b,0x39,0x5e,0xb7,0xdb,0x5d,0xed,0x6a,0xcb,0x9b,0x57,0x53,0x5d,0xa5,0x52,
0x81,0x04,0xca,0xe6,0x72,0xdf,0x65,0xa3,0x2a,0x19,0xfe,0xd2,0xe9,0x74,0xd6,0x39,
0x1b,0x53,0x7a,0xeb,0x14,0x92,0xbf,0x57,0xdb,0x6d,0x3a,0x9d,0x4f,0xa7,0xd3,0xe9,
0x6c,0x3a,0x9d,0x4e,0xa7,0xd3,0xf1,0xad,0x8a,0xaf,0x92,0xf6,0xab,0x03,0x2f,0x74,
0xb9,0xef,0x53,0x73,0xa6,0x54,0x3a,0xe4,0x6d,0xb7,0xce,0x49,0x55,0xea,0xb6,0x4a,
0xba,0x50,0xbb,0x5d,0xd6,0xea,0xf3,0xe9,0x6c,0x3a,0x9d,0x8e,0x36,0xbd,0x4e,0xa7,
0xb3,0xdb,0x4a,0x56,0x52,0x39,0xa6,0xec,0xd6,0xad,0x3b,0x90,0x44,0x2b,0xd5,0x13,
0x2d,0xad,0xb2,0xe9,0x74,0x3a,0x9d,0x4e,0xa7,0xd3,0xd9,0xad,0x53,0x36,0xca,0xac,
0x5a,0x87,0x5f,0x6b,0xd7,0xeb,0x74,0x3a,0x9d,0x0d,0x5b,0xe9,0x74,0x3a,0x59,0xe9,
0xf5,0x31,0x5f,0x4a,0xa5,0xd3,0xe9,0x30,0x94,0x54,0x52,0xc9,0x0a,0x69,0xd9,0xed,
0x76,0xbb,0xbd,0x9c,0x73,0xce,0x29,0xa9,0xa4,0x92,0x4a,0x2a,0xa9,0xa4,0x73,0xce,
0x39,0xe7,0xdc,0x76,0xbb,0xed,0x5c,0xa7,0xd3,0xb9,0x74,0x7c,0xca,0x39,0x97,0x9d,
0x31,0x9b,0x55,0x52,0xd9,0xf0,0x9c,0x6e,0x56,0xa7,0xec,0x3a,0x9d,0x0e,0x4f,0xe9,
0xe8,0xb2,0xdb,0x55,0xb9,0xb9,0xb2,0x4e,0x39,0x85,0xf3,0xb9,0xd2,0xe9,0xd0,0x95,
0x4e,0xa7,0xd3,0xe9,0x64,0x65,0x2f,0x77,0xee,0xd2,0x3b,0xae,0x74,0x3a,0x9d,0x4e,
0x57,0xb2,0xaa,0x5d,0x29,0xe5,0x9c,0x5d,0x2a,0xe9,0x9c,0x73,0xce,0x39,0x27,0x9d,
0x73,0x4e,0x2a,0xe7,0x94,0x94,0x4a,0xf5,0x3a,0x9d,0x4e,0x77,0xae,0x53,0x4b,0xe5,
0x6a,0xe7,0xa4,0xba,0xd5,0xbd,0x2a,0xa5,0x4a,0xd9,0xed,0x76,0x9b,0x4e,0xe7,0x3a,
0x77,0xb9,0x5a,0x2e,0x2b,0x59,0x49,0x25,0x95,0x54,0x25,0x2b,0x59,0xc9,0x4a,0xa7,
0xd3,0xe9,0x74,0x3a,0x1d,0x67,0x3a,0xad,0x6a,0xbb,0xc5,0x63,0x3a,0x9d,0x4e,0x47,
0x98,0x2c,0xd7,0xb9,0xda,0x6e,0x95,0x43,0x11
};

void setup() {
  
  arduboy.begin();

  arduboy.setFrameRate(15);
  
  arduboy.initRandomSeed();
  
  arduboy.clear();
  arduboy.drawCompressed(0,0,fireplace);
  
}

unsigned char lasthighest = FIRE_Y;

void loop() {
  if (!(arduboy.nextFrame()))
    return;
        
   for (int x = FIRE_X; x < FIRE_X+26; x++) {
       
        if(!(random(2))) arduboy.drawPixel(x, FIRE_Y, 1); else arduboy.drawPixel(x, FIRE_Y, 0);
    }
  
    unsigned char nowhighest = FIRE_Y;
    for (int y = FIRE_Y - 1; y >= lasthighest - 1; y--){
        for (int x = FIRE_X; x < FIRE_X+26; x++){
            
            if (! (random(7))) {
                arduboy.drawPixel(x, y, 0);
            } else {
                int v = arduboy.getPixel(x - 1, y + 1);
                v += arduboy.getPixel(x + 1, y + 1);
                v += arduboy.getPixel(x, y + 1);
                

                if (v && (random(v))){
                    arduboy.drawPixel(x, y, 1);
                    if( y < nowhighest && y > 0) nowhighest = y;
                }
                else if(!v)
                    arduboy.drawPixel(x, y, 0);

            }
        }
    }
    lasthighest = nowhighest - 2;

  arduboy.display();
}

